//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: greet.proto

@kotlin.jvm.JvmSynthetic
public inline fun helloRequest(block: HelloRequestKt.Dsl.() -> kotlin.Unit): Greet.HelloRequest =
  HelloRequestKt.Dsl._create(Greet.HelloRequest.newBuilder()).apply { block() }._build()
public object HelloRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: Greet.HelloRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: Greet.HelloRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): Greet.HelloRequest = _builder.build()

    /**
     * <code>string name = 1;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>string language = 2;</code>
     */
    public var language: kotlin.String
      @JvmName("getLanguage")
      get() = _builder.getLanguage()
      @JvmName("setLanguage")
      set(value) {
        _builder.setLanguage(value)
      }
    /**
     * <code>string language = 2;</code>
     */
    public fun clearLanguage() {
      _builder.clearLanguage()
    }

    /**
     * <code>int32 friendliness = 3;</code>
     */
    public var friendliness: kotlin.Int
      @JvmName("getFriendliness")
      get() = _builder.getFriendliness()
      @JvmName("setFriendliness")
      set(value) {
        _builder.setFriendliness(value)
      }
    /**
     * <code>int32 friendliness = 3;</code>
     */
    public fun clearFriendliness() {
      _builder.clearFriendliness()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun Greet.HelloRequest.copy(block: HelloRequestKt.Dsl.() -> kotlin.Unit): Greet.HelloRequest =
  HelloRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()
